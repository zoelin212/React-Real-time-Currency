{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Converter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([]);\n  const [amounts, setAmounts] = useState(Array(5).fill(''));\n  const [rates, setRates] = useState({});\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      const response = await fetch('https://zoelindev.com/Real-time-Currency/api/currency_code.php');\n      const data = await response.json();\n      setCurrencies(data.currency_codes);\n      setSelectedCurrencies(Array(5).fill(data.currency_codes[0]));\n      setRates(data.rate);\n    };\n    fetchCurrencies();\n  }, []);\n  const handleCurrencyChange = (index, newCurrency) => {\n    setSelectedCurrencies(prevCurrencies => {\n      const updatedCurrencies = [...prevCurrencies];\n      updatedCurrencies[index] = newCurrency;\n      return updatedCurrencies;\n    });\n  };\n  const handleAmountChange = (index, newAmount) => {\n    setAmounts(prevAmounts => {\n      const updatedAmounts = [...prevAmounts];\n      updatedAmounts[index] = isNaN(parseFloat(newAmount)) ? \"\" : parseFloat(newAmount);\n      return updatedAmounts;\n    });\n  };\n  const convertAmount = (sourceIndex, targetIndex) => {\n    const sourceCurrency = selectedCurrencies[sourceIndex];\n    const targetCurrency = selectedCurrencies[targetIndex];\n    const amount = amounts[sourceIndex];\n    if (!rates || !rates[`USD${sourceCurrency}`] || !rates[`USD${targetCurrency}`]) {\n      return \"\";\n    }\n    const sourceToUSD = rates[`USD${sourceCurrency}`].Exrate;\n    const usdToTarget = rates[`USD${targetCurrency}`].Exrate;\n    const convertedAmount = amount / sourceToUSD * usdToTarget;\n    return isNaN(convertedAmount) ? \"\" : convertedAmount.toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ConverterBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faRotate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), \" Converter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/average\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCoins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }, this), \" Average\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), amounts.map((amount, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amount,\n        onChange: e => handleAmountChange(index, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n        options: currencies,\n        value: selectedCurrencies[index],\n        onChange: newCurrency => handleCurrencyChange(index, newCurrency)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: amounts.map((_, targetIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: amount !== \"\" && index !== targetIndex ? `${selectedCurrencies[index]} -> ${selectedCurrencies[targetIndex]}: ${convertAmount(index, targetIndex)}` : null\n        }, targetIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Converter, \"8B3S1MFHNYjtBemYY0eWqqT5gWg=\");\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["useState","useEffect","Link","FontAwesomeIcon","faRotate","faCoins","CustomSelect","jsxDEV","_jsxDEV","Converter","_s","currencies","setCurrencies","selectedCurrencies","setSelectedCurrencies","amounts","setAmounts","Array","fill","rates","setRates","fetchCurrencies","response","fetch","data","json","currency_codes","rate","handleCurrencyChange","index","newCurrency","prevCurrencies","updatedCurrencies","handleAmountChange","newAmount","prevAmounts","updatedAmounts","isNaN","parseFloat","convertAmount","sourceIndex","targetIndex","sourceCurrency","targetCurrency","amount","sourceToUSD","Exrate","usdToTarget","convertedAmount","toFixed","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","to","map","type","value","onChange","e","target","options","_","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faRotate,\n    faCoins\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\n\nconst Converter = () => {\n    const [currencies, setCurrencies] = useState([]);\n    const [selectedCurrencies, setSelectedCurrencies] = useState([]);\n    const [amounts, setAmounts] = useState(Array(5).fill(''));\n    const [rates, setRates] = useState({});\n\n    useEffect(() => {\n        const fetchCurrencies = async () => {\n            const response = await fetch('https://zoelindev.com/Real-time-Currency/api/currency_code.php');\n            const data = await response.json();\n            setCurrencies(data.currency_codes);\n            setSelectedCurrencies(Array(5).fill(data.currency_codes[0]));\n            setRates(data.rate);\n        };\n\n        fetchCurrencies();\n    }, []);\n\n    const handleCurrencyChange = (index, newCurrency) => {\n        setSelectedCurrencies(prevCurrencies => {\n            const updatedCurrencies = [...prevCurrencies];\n            updatedCurrencies[index] = newCurrency;\n            return updatedCurrencies;\n        });\n    };\n\n    const handleAmountChange = (index, newAmount) => {\n        setAmounts(prevAmounts => {\n            const updatedAmounts = [...prevAmounts];\n            updatedAmounts[index] = isNaN(parseFloat(newAmount)) ? \"\" : parseFloat(newAmount);\n            return updatedAmounts;\n        });\n    };\n\n    const convertAmount = (sourceIndex, targetIndex) => {\n        const sourceCurrency = selectedCurrencies[sourceIndex];\n        const targetCurrency = selectedCurrencies[targetIndex];\n        const amount = amounts[sourceIndex];\n\n        if (!rates || !rates[`USD${sourceCurrency}`] || !rates[`USD${targetCurrency}`]) {\n            return \"\";\n        }\n\n        const sourceToUSD = rates[`USD${sourceCurrency}`].Exrate;\n        const usdToTarget = rates[`USD${targetCurrency}`].Exrate;\n\n        const convertedAmount = (amount / sourceToUSD) * usdToTarget;\n        return isNaN(convertedAmount) ? \"\" : convertedAmount.toFixed(2);\n    };\n\n    return (\n        <div className=\"ConverterBox\">\n            <h2>\n                <FontAwesomeIcon icon={faRotate} /> Converter\n            </h2>\n            <h2>\n                <Link to=\"/average\"><FontAwesomeIcon icon={faCoins} /> Average</Link>\n            </h2>\n\n            {amounts.map((amount, index) => (\n                <div className=\"group\" key={index}>\n                    <input\n                        type=\"text\"\n                        value={amount}\n                        onChange={e => handleAmountChange(index, e.target.value)}\n                    />\n                    <CustomSelect\n                        options={currencies}\n                        value={selectedCurrencies[index]}\n                        onChange={newCurrency => handleCurrencyChange(index, newCurrency)}\n                    />\n                    <div>\n                        {amounts.map((_, targetIndex) => (\n                            <p key={targetIndex}>\n                                {amount !== \"\" && index !== targetIndex\n                                    ? `${selectedCurrencies[index]} -> ${selectedCurrencies[targetIndex]}: ${convertAmount(\n                                        index,\n                                        targetIndex\n                                        )}`\n                                        : null}\n                                        </p>\n                                        ))}\n                                        </div>\n                                        </div>\n                                        ))}\n                                        </div>\n                                        );\n                                        };\n                                        \n                                        export default Converter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}