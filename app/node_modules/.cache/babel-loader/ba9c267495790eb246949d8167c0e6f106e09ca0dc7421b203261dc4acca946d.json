{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\nimport \"./converter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Converter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [rates, setRates] = useState([]);\n  const [enteredNumber, setEnteredNumber] = useState(null);\n  const [customSelects, setCustomSelects] = useState([{\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }]);\n  const [convertedValues, setConvertedValues] = useState(Array(6).fill(null));\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      const response = await fetch(\"https://zoelindev.com/Real-time-Currency/api/currency_code.php\");\n      const data = await response.json();\n      setCurrencies(data.currency_codes);\n      setRates(data.rate);\n      //console.log(rates);\n    };\n\n    fetchCurrencies();\n  }, []);\n  const handleEnteredNumberChange = (number, index) => {\n    const newCustomSelects = [...customSelects];\n    newCustomSelects[index].value = isNaN(number) ? null : Number(number);\n    setCustomSelects(newCustomSelects);\n    console.log(newCustomSelects);\n\n    // Calculate the converted values and update the state\n    const newConvertedValues = calculateConvertedValue(index);\n    setConvertedValues(newConvertedValues);\n\n    // Update enteredValue for other CustomSelect components\n    newCustomSelects.forEach((select, i) => {\n      if (i !== index) {\n        select.value = newConvertedValues[i];\n      }\n    });\n    setCustomSelects(newCustomSelects);\n  };\n  const calculateConvertedValue = index => {\n    var _rates;\n    // if (!customSelects[index].currency || !customSelects[index].value) {\n    //   return null;\n    // }\n\n    if (!customSelects[index].currency) {\n      return null;\n    }\n    const fromCurrency = customSelects[index].currency;\n    const fromValue = customSelects[index].value;\n    const fromRate = (_rates = rates[`USD${fromCurrency}`]) === null || _rates === void 0 ? void 0 : _rates.Exrate;\n    console.log(fromCurrency, fromValue, fromRate);\n    const usdValue = fromValue / fromRate;\n    console.log(\"usdValue: \" + usdValue);\n    return customSelects.map((select, i) => {\n      var _rates2;\n      if (i === index || !select.currency) {\n        return null;\n      }\n      const toRate = (_rates2 = rates[`USD${select.currency}`]) === null || _rates2 === void 0 ? void 0 : _rates2.Exrate;\n      console.log(\"toRate: \" + toRate);\n      const answer = (usdValue * toRate).toFixed(2);\n      console.log(\"answer: \" + answer);\n      return answer;\n    });\n  };\n  const handleCurrencyChange = (currency, index) => {\n    const newCustomSelects = [...customSelects];\n    newCustomSelects[index].currency = currency;\n    setCustomSelects(newCustomSelects);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ConverterBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faRotate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), \" Converter\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/average\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCoins\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), \" Average\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"changeBox\",\n      children: customSelects.map((select, index) => /*#__PURE__*/_jsxDEV(CustomSelect, {\n        options: currencies,\n        selectedCurrency: select.currency,\n        enteredValue: select.value,\n        convertedValues: convertedValues,\n        onNumberChange: number => handleEnteredNumberChange(number, index),\n        onCurrencyChange: currency => handleCurrencyChange(currency, index),\n        index: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(Converter, \"6YtJIlXhvFMlUMHAClXJZALqviE=\");\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["useState","useEffect","Link","FontAwesomeIcon","faRotate","faCoins","CustomSelect","jsxDEV","_jsxDEV","Converter","_s","currencies","setCurrencies","rates","setRates","enteredNumber","setEnteredNumber","customSelects","setCustomSelects","currency","value","convertedValues","setConvertedValues","Array","fill","fetchCurrencies","response","fetch","data","json","currency_codes","rate","handleEnteredNumberChange","number","index","newCustomSelects","isNaN","Number","console","log","newConvertedValues","calculateConvertedValue","forEach","select","i","_rates","fromCurrency","fromValue","fromRate","Exrate","usdValue","map","_rates2","toRate","answer","toFixed","handleCurrencyChange","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","to","options","selectedCurrency","enteredValue","onNumberChange","onCurrencyChange","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\nimport \"./converter.css\";\n\nconst Converter = () => {\n    const [currencies, setCurrencies] = useState([]);\n    const [rates, setRates] = useState([]);\n    const [enteredNumber, setEnteredNumber] = useState(null);\n    const [customSelects, setCustomSelects] = useState([\n        { currency: null, value: null },\n        { currency: null, value: null },\n        { currency: null, value: null },\n        { currency: null, value: null },\n        { currency: null, value: null },\n        { currency: null, value: null },\n    ]);\n    const [convertedValues, setConvertedValues] = useState(Array(6).fill(null));\n\n    useEffect(() => {\n        const fetchCurrencies = async () => {\n            const response = await fetch(\n                \"https://zoelindev.com/Real-time-Currency/api/currency_code.php\"\n            );\n            const data = await response.json();\n            setCurrencies(data.currency_codes);\n            setRates(data.rate);\n            //console.log(rates);\n        };\n\n        fetchCurrencies();\n    }, []);\n\n    const handleEnteredNumberChange = (number, index) => {\n        const newCustomSelects = [...customSelects];\n        newCustomSelects[index].value = isNaN(number) ? null : Number(number);\n        setCustomSelects(newCustomSelects);\n        console.log(newCustomSelects);\n    \n        // Calculate the converted values and update the state\n        const newConvertedValues = calculateConvertedValue(index);\n        setConvertedValues(newConvertedValues);\n    \n        // Update enteredValue for other CustomSelect components\n        newCustomSelects.forEach((select, i) => {\n            if (i !== index) {\n                select.value = newConvertedValues[i];\n            }\n        });\n    \n        setCustomSelects(newCustomSelects);\n    };\n    \n    \n      \n\n    const calculateConvertedValue = (index) => {\n        // if (!customSelects[index].currency || !customSelects[index].value) {\n        //   return null;\n        // }\n\n        if (!customSelects[index].currency) {\n            return null;\n        }\n\n        const fromCurrency = customSelects[index].currency;\n        const fromValue = customSelects[index].value;\n        const fromRate = rates[`USD${fromCurrency}`]?.Exrate;\n        \n        console.log(fromCurrency, fromValue, fromRate);\n      \n        const usdValue = fromValue / fromRate;\n        console.log(\"usdValue: \"+ usdValue);\n\n        return customSelects.map((select, i) => {\n            if (i === index || !select.currency) {\n                return null;\n            }\n            const toRate = rates[`USD${select.currency}`]?.Exrate;\n            console.log(\"toRate: \"+toRate);\n\n            const answer = (usdValue * toRate).toFixed(2);\n            console.log(\"answer: \"+ answer);\n            return answer;\n        });\n      \n      };\n      \n\n    const handleCurrencyChange = (currency, index) => {\n        const newCustomSelects = [...customSelects];\n        newCustomSelects[index].currency = currency;\n        setCustomSelects(newCustomSelects);\n    };\n\n    return (\n        <div className=\"ConverterBox\">\n            <div className=\"titleBox\">\n                <h2>\n                    <FontAwesomeIcon icon={faRotate} /> Converter\n                </h2>\n                <h2>\n                    <Link to=\"/average\">\n                        <FontAwesomeIcon icon={faCoins} /> Average\n                    </Link>\n                </h2>\n                \n            </div>\n\n            <div className=\"changeBox\">\n                {customSelects.map((select, index) => (\n                    <CustomSelect\n                        key={index}\n                        options={currencies}\n                        selectedCurrency={select.currency}\n                        enteredValue={select.value}\n                        convertedValues={convertedValues} \n                        onNumberChange={(number) => handleEnteredNumberChange(number, index)}\n                        onCurrencyChange={(currency) => handleCurrencyChange(currency, index)}\n                        index={index}\n                        \n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Converter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}