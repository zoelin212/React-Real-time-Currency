{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from \"./CustomSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Converter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [rates, setRates] = useState({});\n  const [amounts, setAmounts] = useState(Array(5).fill(\"\"));\n  const [selectedCurrencies, setSelectedCurrencies] = useState(Array(5).fill(\"USD\"));\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      try {\n        const response = await fetch(\"https://your-api-url\");\n        const data = await response.json();\n        setCurrencies(data.currency_codes);\n        setRates(data.rate);\n      } catch (error) {\n        console.error(\"Error fetching currency data:\", error);\n      }\n    };\n    fetchCurrencies();\n  }, []);\n  const handleCurrencyChange = (index, newCurrency) => {\n    const newSelectedCurrencies = [...selectedCurrencies];\n    newSelectedCurrencies[index] = newCurrency;\n    setSelectedCurrencies(newSelectedCurrencies);\n  };\n  const handleAmountChange = (index, newAmount) => {\n    const newAmounts = [...amounts];\n    newAmounts[index] = isNaN(parseFloat(newAmount)) ? \"\" : parseFloat(newAmount);\n    setAmounts(newAmounts);\n  };\n  const convertAmount = (sourceIndex, targetIndex) => {\n    const sourceCurrency = selectedCurrencies[sourceIndex];\n    const targetCurrency = selectedCurrencies[targetIndex];\n    const amount = amounts[sourceIndex];\n    if (!rates || !rates[`USD${sourceCurrency}`] || !rates[`USD${targetCurrency}`]) {\n      return \"\";\n    }\n    const sourceToUSD = rates[`USD${sourceCurrency}`].Exrate;\n    const usdToTarget = rates[`USD${targetCurrency}`].Exrate;\n    const convertedAmount = amount / sourceToUSD * usdToTarget;\n    return isNaN(convertedAmount) ? \"\" : convertedAmount.toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ConverterBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faRotate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \" Converter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/average\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCoins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \" Average\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), amounts.map((amount, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amount,\n        onChange: e => handleAmountChange(index, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n        options: currencies,\n        value: selectedCurrencies[index],\n        onChange: newCurrency => handleCurrencyChange(index, newCurrency)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: amounts.map((_, targetIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: index !== targetIndex ? `${selectedCurrencies[index]} -> ${selectedCurrencies[targetIndex]}: ${convertAmount(index, targetIndex)}` : null\n        }, targetIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Converter, \"qm5jjG7IhkAlE7p3US5caojLLZI=\");\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["useState","useEffect","Link","FontAwesomeIcon","faRotate","faCoins","CustomSelect","jsxDEV","_jsxDEV","Converter","_s","currencies","setCurrencies","rates","setRates","amounts","setAmounts","Array","fill","selectedCurrencies","setSelectedCurrencies","fetchCurrencies","response","fetch","data","json","currency_codes","rate","error","console","handleCurrencyChange","index","newCurrency","newSelectedCurrencies","handleAmountChange","newAmount","newAmounts","isNaN","parseFloat","convertAmount","sourceIndex","targetIndex","sourceCurrency","targetCurrency","amount","sourceToUSD","Exrate","usdToTarget","convertedAmount","toFixed","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","to","map","type","value","onChange","e","target","options","_","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from \"./CustomSelect\";\n\nconst Converter = () => {\n  const [currencies, setCurrencies] = useState([]);\n  const [rates, setRates] = useState({});\n  const [amounts, setAmounts] = useState(Array(5).fill(\"\"));\n  const [selectedCurrencies, setSelectedCurrencies] = useState(Array(5).fill(\"USD\"));\n\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      try {\n        const response = await fetch(\"https://your-api-url\");\n        const data = await response.json();\n        setCurrencies(data.currency_codes);\n        setRates(data.rate);\n      } catch (error) {\n        console.error(\"Error fetching currency data:\", error);\n      }\n    };\n    fetchCurrencies();\n  }, []);\n\n  const handleCurrencyChange = (index, newCurrency) => {\n    const newSelectedCurrencies = [...selectedCurrencies];\n    newSelectedCurrencies[index] = newCurrency;\n    setSelectedCurrencies(newSelectedCurrencies);\n  };\n\n  const handleAmountChange = (index, newAmount) => {\n    const newAmounts = [...amounts];\n    newAmounts[index] = isNaN(parseFloat(newAmount)) ? \"\" : parseFloat(newAmount);\n    setAmounts(newAmounts);\n  };\n\n  const convertAmount = (sourceIndex, targetIndex) => {\n    const sourceCurrency = selectedCurrencies[sourceIndex];\n    const targetCurrency = selectedCurrencies[targetIndex];\n    const amount = amounts[sourceIndex];\n\n    if (!rates || !rates[`USD${sourceCurrency}`] || !rates[`USD${targetCurrency}`]) {\n      return \"\";\n    }\n\n    const sourceToUSD = rates[`USD${sourceCurrency}`].Exrate;\n    const usdToTarget = rates[`USD${targetCurrency}`].Exrate;\n\n    const convertedAmount = (amount / sourceToUSD) * usdToTarget;\n    return isNaN(convertedAmount) ? \"\" : convertedAmount.toFixed(2);\n  };\n\n  return (\n    <div className=\"ConverterBox\">\n      <h2>\n        <FontAwesomeIcon icon={faRotate} /> Converter\n      </h2>\n      <h2>\n        <Link to=\"/average\">\n          <FontAwesomeIcon icon={faCoins} /> Average\n        </Link>\n      </h2>\n\n      {amounts.map((amount, index) => (\n        <div className=\"group\" key={index}>\n          <input\n            type=\"text\"\n            value={amount}\n            onChange={(e) => handleAmountChange(index, e.target.value)}\n          />\n          <CustomSelect\n            options={currencies}\n            value={selectedCurrencies[index]}\n            onChange={(newCurrency) => handleCurrencyChange(index, newCurrency)}\n          />\n          <div>\n            {amounts.map((_, targetIndex) => (\n              <p key={targetIndex}>\n                {index !== targetIndex\n                  ? `${selectedCurrencies[index]} -> ${selectedCurrencies[targetIndex]}: ${convertAmount(\n                      index,\n                      targetIndex\n                    )}`\n                  : null}\n              </p>\n            ))}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Converter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}