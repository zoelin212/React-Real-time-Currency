{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Converter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [selectedCurrencies, setSelectedCurrencies] = useState([]);\n  const [amounts, setAmounts] = useState(Array(5).fill(''));\n  const [exchangeRates, setExchangeRates] = useState({});\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      const response = await fetch('http://localhost:8000/api/currencies.php');\n      const data = await response.json();\n      setCurrencies(data.currency_codes);\n      setSelectedCurrencies(Array(5).fill(data.currency_codes[0]));\n      fetchExchangeRates(data.currency_codes);\n    };\n    fetchCurrencies();\n  }, []);\n  const fetchExchangeRates = async currencyCodes => {\n    const response = await fetch('https://tw.rter.info/capi.php');\n    const data = await response.json();\n    const rates = {};\n    currencyCodes.forEach(code => {\n      var _data;\n      rates[code] = (_data = data[`USD${code}`]) === null || _data === void 0 ? void 0 : _data.Exrate;\n    });\n    setExchangeRates(rates);\n  };\n  const handleCurrencyChange = (index, newCurrency) => {\n    setSelectedCurrencies(prevCurrencies => {\n      const updatedCurrencies = [...prevCurrencies];\n      updatedCurrencies[index] = newCurrency;\n      return updatedCurrencies;\n    });\n  };\n  const handleAmountChange = (index, newAmount) => {\n    setAmounts(prevAmounts => {\n      const updatedAmounts = [...prevAmounts];\n      updatedAmounts[index] = newAmount;\n      return updatedAmounts;\n    });\n  };\n  const convertAmount = (sourceIndex, targetIndex) => {\n    const sourceCurrency = selectedCurrencies[sourceIndex];\n    const targetCurrency = selectedCurrencies[targetIndex];\n    const sourceAmount = parseFloat(amounts[sourceIndex]);\n    if (!sourceAmount || !exchangeRates[sourceCurrency] || !exchangeRates[targetCurrency]) {\n      return '';\n    }\n    const amountInUSD = sourceAmount / exchangeRates[sourceCurrency];\n    const targetAmount = amountInUSD * exchangeRates[targetCurrency];\n    return targetAmount.toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ConverterBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faRotate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), \" Converter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/average\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCoins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }, this), \" Average\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), amounts.map((amount, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amount,\n        onChange: e => handleAmountChange(index, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n        options: currencies,\n        value: selectedCurrencies[index],\n        onChange: newCurrency => handleCurrencyChange(index, newCurrency)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: amounts.map((_, targetIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: index !== targetIndex ? `${selectedCurrencies[index]} -> ${selectedCurrencies[targetIndex]}: ${convertAmount(index, targetIndex)}` : null\n        }, targetIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(Converter, \"AU8uUBExPEMOdUHLgyetJ1p9MKw=\");\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["useState","useEffect","Link","FontAwesomeIcon","faRotate","faCoins","CustomSelect","jsxDEV","_jsxDEV","Converter","_s","currencies","setCurrencies","selectedCurrencies","setSelectedCurrencies","amounts","setAmounts","Array","fill","exchangeRates","setExchangeRates","fetchCurrencies","response","fetch","data","json","currency_codes","fetchExchangeRates","currencyCodes","rates","forEach","code","_data","Exrate","handleCurrencyChange","index","newCurrency","prevCurrencies","updatedCurrencies","handleAmountChange","newAmount","prevAmounts","updatedAmounts","convertAmount","sourceIndex","targetIndex","sourceCurrency","targetCurrency","sourceAmount","parseFloat","amountInUSD","targetAmount","toFixed","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","to","map","amount","type","value","onChange","e","target","options","_","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faRotate,\n    faCoins\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\n\nconst Converter = () => {\n    const [currencies, setCurrencies] = useState([]);\n    const [selectedCurrencies, setSelectedCurrencies] = useState([]);\n    const [amounts, setAmounts] = useState(Array(5).fill(''));\n    const [exchangeRates, setExchangeRates] = useState({});\n\n    useEffect(() => {\n        const fetchCurrencies = async () => {\n            const response = await fetch('http://localhost:8000/api/currencies.php');\n            const data = await response.json();\n            setCurrencies(data.currency_codes);\n            setSelectedCurrencies(Array(5).fill(data.currency_codes[0]));\n            fetchExchangeRates(data.currency_codes);\n        };\n\n        fetchCurrencies();\n    }, []);\n\n    const fetchExchangeRates = async (currencyCodes) => {\n        const response = await fetch('https://tw.rter.info/capi.php');\n        const data = await response.json();\n\n        const rates = {};\n        currencyCodes.forEach(code => {\n            rates[code] = data[`USD${code}`]?.Exrate;\n        });\n        setExchangeRates(rates);\n    };\n\n    const handleCurrencyChange = (index, newCurrency) => {\n        setSelectedCurrencies(prevCurrencies => {\n            const updatedCurrencies = [...prevCurrencies];\n            updatedCurrencies[index] = newCurrency;\n            return updatedCurrencies;\n        });\n    };\n\n    const handleAmountChange = (index, newAmount) => {\n        setAmounts(prevAmounts => {\n            const updatedAmounts = [...prevAmounts];\n            updatedAmounts[index] = newAmount;\n            return updatedAmounts;\n        });\n    };\n\n    const convertAmount = (sourceIndex, targetIndex) => {\n        const sourceCurrency = selectedCurrencies[sourceIndex];\n        const targetCurrency = selectedCurrencies[targetIndex];\n        const sourceAmount = parseFloat(amounts[sourceIndex]);\n\n        if (!sourceAmount || !exchangeRates[sourceCurrency] || !exchangeRates[targetCurrency]) {\n            return '';\n        }\n\n        const amountInUSD = sourceAmount / exchangeRates[sourceCurrency];\n        const targetAmount = amountInUSD * exchangeRates[targetCurrency];\n        return targetAmount.toFixed(2);\n    };\n\n    return (\n        <div className=\"ConverterBox\">\n            <h2>\n                <FontAwesomeIcon icon={faRotate} /> Converter\n            </h2>\n            <h2>\n                <Link to=\"/average\"><FontAwesomeIcon icon={faCoins} /> Average</Link>\n            </h2>\n\n            {amounts.map((amount, index) => (\n                <div className=\"group\" key={index}>\n                    <input\n                        type=\"text\"\n                        value={amount}\n                        onChange={e => handleAmountChange(index, e.target.value)}\n                    />\n                    <CustomSelect\n                        options={currencies}\n                        value={selectedCurrencies[index]}\n                        onChange={newCurrency => handleCurrencyChange(index, newCurrency)}\n                    />\n                    <div>\n                        {amounts.map((_, targetIndex) => (\n                            <p key={targetIndex}>\n                                {index !== targetIndex ? `${selectedCurrencies[index]} -> ${selectedCurrencies[targetIndex]}: ${convertAmount(index, targetIndex)}` : null}\n                            </p>\n                        ))}\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Converter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}