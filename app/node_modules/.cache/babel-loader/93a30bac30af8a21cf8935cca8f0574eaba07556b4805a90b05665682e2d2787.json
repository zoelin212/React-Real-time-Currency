{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Converter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [rates, setRates] = useState([]);\n  const [enteredNumber, setEnteredNumber] = useState(null);\n  const [customSelects, setCustomSelects] = useState([{\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }, {\n    currency: null,\n    value: null\n  }]);\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      const response = await fetch(\"https://zoelindev.com/Real-time-Currency/api/currency_code.php\");\n      const data = await response.json();\n      setCurrencies(data.currency_codes);\n      setRates(data.rate);\n      //console.log(rates);\n    };\n\n    fetchCurrencies();\n  }, []);\n  const handleEnteredNumberChange = (number, index) => {\n    const newCustomSelects = [...customSelects];\n    newCustomSelects[index].value = number;\n    setCustomSelects(newCustomSelects);\n  };\n  const calculateConvertedValue = index => {\n    var _rates;\n    if (!customSelects[index].currency || !customSelects[index].value) {\n      return null;\n    }\n    const fromCurrency = customSelects[index].currency;\n    const fromValue = customSelects[index].value;\n    const fromRate = (_rates = rates[`USD${fromCurrency}`]) === null || _rates === void 0 ? void 0 : _rates.Exrate;\n    const usdValue = fromValue / fromRate;\n    return customSelects.map(select => {\n      var _rates2;\n      if (!select.currency) {\n        return null;\n      }\n      const toRate = (_rates2 = rates[`USD${select.currency}`]) === null || _rates2 === void 0 ? void 0 : _rates2.Exrate;\n      return (usdValue * toRate).toFixed(4);\n    });\n  };\n  const handleCurrencyChange = (currency, index) => {\n    const newCustomSelects = [...customSelects];\n    newCustomSelects[index].currency = currency;\n    setCustomSelects(newCustomSelects);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ConverterBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faRotate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), \" Converter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/average\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCoins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), \" Average\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), customSelects.map((select, index) => /*#__PURE__*/_jsxDEV(CustomSelect, {\n      options: currencies,\n      selectedCurrency: select.currency,\n      enteredValue: select.value,\n      convertedValues: calculateConvertedValue(index),\n      onNumberChange: number => handleEnteredNumberChange(number, index),\n      onCurrencyChange: currency => handleCurrencyChange(currency, index),\n      index: index\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Converter, \"a9arG8EyoFZo7yLAqQnRvdS+BaY=\");\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["useState","useEffect","Link","FontAwesomeIcon","faRotate","faCoins","CustomSelect","jsxDEV","_jsxDEV","Converter","_s","currencies","setCurrencies","rates","setRates","enteredNumber","setEnteredNumber","customSelects","setCustomSelects","currency","value","fetchCurrencies","response","fetch","data","json","currency_codes","rate","handleEnteredNumberChange","number","index","newCustomSelects","calculateConvertedValue","_rates","fromCurrency","fromValue","fromRate","Exrate","usdValue","map","select","_rates2","toRate","toFixed","handleCurrencyChange","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","to","options","selectedCurrency","enteredValue","convertedValues","onNumberChange","onCurrencyChange","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\n\nconst Converter = () => {\n    const [currencies, setCurrencies] = useState([]);\n    const [rates, setRates] = useState([]);\n    const [enteredNumber, setEnteredNumber] = useState(null);\n    const [customSelects, setCustomSelects] = useState([\n        { currency: null, value: null },\n        { currency: null, value: null },\n        { currency: null, value: null },\n        { currency: null, value: null },\n        { currency: null, value: null },\n    ]);\n\n    useEffect(() => {\n        const fetchCurrencies = async () => {\n            const response = await fetch(\n                \"https://zoelindev.com/Real-time-Currency/api/currency_code.php\"\n            );\n            const data = await response.json();\n            setCurrencies(data.currency_codes);\n            setRates(data.rate);\n            //console.log(rates);\n        };\n\n        fetchCurrencies();\n    }, []);\n\n    const handleEnteredNumberChange = (number, index) => {\n        const newCustomSelects = [...customSelects];\n        newCustomSelects[index].value = number;\n        setCustomSelects(newCustomSelects);\n    };\n      \n\n    const calculateConvertedValue = (index) => {\n        if (!customSelects[index].currency || !customSelects[index].value) {\n            return null;\n        }\n        const fromCurrency = customSelects[index].currency;\n        const fromValue = customSelects[index].value;\n        const fromRate = rates[`USD${fromCurrency}`]?.Exrate;\n\n        const usdValue = fromValue / fromRate;\n\n        return customSelects.map((select) => {\n            if (!select.currency) {\n                return null;\n            }\n            const toRate = rates[`USD${select.currency}`]?.Exrate;\n            return (usdValue * toRate).toFixed(4);\n        });\n    };\n\n    const handleCurrencyChange = (currency, index) => {\n        const newCustomSelects = [...customSelects];\n        newCustomSelects[index].currency = currency;\n        setCustomSelects(newCustomSelects);\n    };\n\n    return (\n        <div className=\"ConverterBox\">\n            <h2>\n                <FontAwesomeIcon icon={faRotate} /> Converter\n            </h2>\n            <h2>\n                <Link to=\"/average\">\n                    <FontAwesomeIcon icon={faCoins} /> Average\n                </Link>\n            </h2>\n\n            {customSelects.map((select, index) => (\n                <CustomSelect\n                    key={index}\n                    options={currencies}\n                    selectedCurrency={select.currency}\n                    enteredValue={select.value}\n                    convertedValues={calculateConvertedValue(index)}\n                    onNumberChange={(number) => handleEnteredNumberChange(number, index)}\n                    onCurrencyChange={(currency) => handleCurrencyChange(currency, index)}\n                    index={index}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default Converter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}