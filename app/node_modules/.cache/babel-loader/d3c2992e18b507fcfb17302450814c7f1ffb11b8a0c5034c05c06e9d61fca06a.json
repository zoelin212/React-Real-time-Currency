{"ast":null,"code":"var _jsxFileName = \"/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRotate, faCoins } from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Converter = () => {\n  _s();\n  const [currencies, setCurrencies] = useState([]);\n  const [amounts, setAmounts] = useState([1, 0, 0, 0, 0]);\n  const [selectedCurrencies, setSelectedCurrencies] = useState(['USD', 'TWD', 'CNY', 'CAD', 'JPY']);\n  useEffect(() => {\n    // Fetch all currency symbols\n    const myHeaders = new Headers();\n    myHeaders.append(\"apikey\", \"6ouIhq8dNQqxffVKZX4k4NgVgF4anHWm\");\n    const requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    fetch(\"https://api.apilayer.com/fixer/symbols\", requestOptions).then(response => response.json()).then(result => {\n      const currencyArray = Object.keys(result.symbols);\n      setCurrencies(currencyArray);\n    }).catch(error => console.log('error', error));\n  }, []);\n  useEffect(() => {\n    updateAllAmounts(0);\n  }, [selectedCurrencies]);\n  const updateAllAmounts = sourceIndex => {\n    const sourceAmount = amounts[sourceIndex];\n    const sourceCurrency = selectedCurrencies[sourceIndex];\n    const promises = selectedCurrencies.map((targetCurrency, index) => {\n      if (index === sourceIndex) return Promise.resolve(sourceAmount);\n      return fetchConversionRate(sourceCurrency, targetCurrency).then(rate => sourceAmount * rate);\n    });\n    Promise.all(promises).then(newAmounts => {\n      setAmounts(newAmounts);\n    });\n  };\n  const fetchConversionRate = async (from, to) => {\n    const apiKey = \"6ouIhq8dNQqxffVKZX4k4NgVgF4anHWm\";\n    const url = `https://api.apilayer.com/fixer/convert?to=${to}&from=${from}&amount=1`;\n    const myHeaders = new Headers();\n    myHeaders.append(\"apikey\", apiKey);\n    const requestOptions = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow'\n    };\n    const response = await fetch(url, requestOptions);\n    const result = await response.json();\n    return result.result;\n  };\n  const handleAmountChange = (index, newAmount) => {\n    setAmounts(prevAmounts => {\n      const newAmounts = [...prevAmounts];\n      newAmounts[index] = parseFloat(newAmount) || 0;\n      return newAmounts;\n    });\n    updateAllAmounts(index);\n  };\n  const handleCurrencyChange = (index, newCurrency) => {\n    setSelectedCurrencies(prevCurrencies => {\n      const newSelectedCurrencies = [...prevCurrencies];\n      newSelectedCurrencies[index] = newCurrency;\n      return newSelectedCurrencies;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ConverterBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faRotate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), \" Converter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/average\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCoins\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 37\n        }, this), \" Average\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), amounts.map((amount, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: amount,\n        onChange: e => handleAmountChange(index, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n        options: currencies,\n        value: selectedCurrencies[index],\n        onChange: newCurrency => handleCurrencyChange(index, newCurrency)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n_s(Converter, \"E4P+Cdo3ucyj0KI3bANz56v52Fs=\");\n_c = Converter;\nexport default Converter;\nvar _c;\n$RefreshReg$(_c, \"Converter\");","map":{"version":3,"names":["useState","useEffect","Link","FontAwesomeIcon","faRotate","faCoins","CustomSelect","jsxDEV","_jsxDEV","Converter","_s","currencies","setCurrencies","amounts","setAmounts","selectedCurrencies","setSelectedCurrencies","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","json","result","currencyArray","Object","keys","symbols","catch","error","console","log","updateAllAmounts","sourceIndex","sourceAmount","sourceCurrency","promises","map","targetCurrency","index","Promise","resolve","fetchConversionRate","rate","all","newAmounts","from","to","apiKey","url","handleAmountChange","newAmount","prevAmounts","parseFloat","handleCurrencyChange","newCurrency","prevCurrencies","newSelectedCurrencies","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","amount","type","value","onChange","e","target","options","_c","$RefreshReg$"],"sources":["/Users/zoe/Desktop/Independent/currency/app/src/components/Converter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faRotate,\n    faCoins\n} from \"@fortawesome/free-solid-svg-icons\";\nimport CustomSelect from './CustomSelect';\n\nconst Converter = () => {\n    const [currencies, setCurrencies] = useState([]);\n    const [amounts, setAmounts] = useState([1, 0, 0, 0, 0]);\n    const [selectedCurrencies, setSelectedCurrencies] = useState(['USD', 'TWD', 'CNY', 'CAD', 'JPY']);\n\n    useEffect(() => {\n        // Fetch all currency symbols\n        const myHeaders = new Headers();\n        myHeaders.append(\"apikey\", \"6ouIhq8dNQqxffVKZX4k4NgVgF4anHWm\");\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n        fetch(\"https://api.apilayer.com/fixer/symbols\", requestOptions)\n            .then(response => response.json())\n            .then(result => {\n                const currencyArray = Object.keys(result.symbols);\n                setCurrencies(currencyArray);\n            })\n            .catch(error => console.log('error', error));\n    }, []);\n\n    useEffect(() => {\n        updateAllAmounts(0);\n    }, [selectedCurrencies]);\n\n    const updateAllAmounts = (sourceIndex) => {\n        const sourceAmount = amounts[sourceIndex];\n        const sourceCurrency = selectedCurrencies[sourceIndex];\n        const promises = selectedCurrencies.map((targetCurrency, index) => {\n            if (index === sourceIndex) return Promise.resolve(sourceAmount);\n            return fetchConversionRate(sourceCurrency, targetCurrency)\n                .then(rate => sourceAmount * rate);\n        });\n\n        Promise.all(promises).then(newAmounts => {\n            setAmounts(newAmounts);\n        });\n    };\n\n    const fetchConversionRate = async (from, to) => {\n        const apiKey = \"6ouIhq8dNQqxffVKZX4k4NgVgF4anHWm\";\n        const url = `https://api.apilayer.com/fixer/convert?to=${to}&from=${from}&amount=1`;\n        const myHeaders = new Headers();\n        myHeaders.append(\"apikey\", apiKey);\n\n        const requestOptions = {\n            method: 'GET',\n            headers: myHeaders,\n            redirect: 'follow'\n        };\n\n        const response = await fetch(url, requestOptions);\n        const result = await response.json();\n        return result.result;\n    };\n\n    const handleAmountChange = (index, newAmount) => {\n        setAmounts(prevAmounts => {\n            const newAmounts = [...prevAmounts];\n            newAmounts[index] = parseFloat(newAmount) || 0;\n            return newAmounts;\n        });\n        updateAllAmounts(index);\n    };\n\n    const handleCurrencyChange = (index, newCurrency) => {\n        setSelectedCurrencies(prevCurrencies => {\n            const newSelectedCurrencies = [...prevCurrencies];\n            newSelectedCurrencies[index] = newCurrency;\n            return newSelectedCurrencies;\n        });\n    };\n\n    return (\n        <div className=\"ConverterBox\">\n            <h2>\n                <FontAwesomeIcon icon={faRotate} /> Converter\n            </h2>\n            <h2>\n                <Link to=\"/average\"><FontAwesomeIcon icon={faCoins} /> Average</Link>\n            </h2>\n\n            {amounts.map((amount, index) => (\n                <div className=\"group\" key={index}>\n                    <input\n                        type=\"text\"\n                        value={amount}\n                        onChange={e => handleAmountChange(index, e.target.value)}\n                    />\n                    <CustomSelect\n                        options={currencies}\n                        value={selectedCurrencies[index]}\n                        onChange={newCurrency => handleCurrencyChange(index, newCurrency)}\n                    />\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Converter;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}